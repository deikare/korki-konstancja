
konwerter_16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000358  000003ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000358  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800108  00800108  000003f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000424  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b35  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b0  00000000  00000000  00000fd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000338  00000000  00000000  00001889  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b2  00000000  00000000  00001c84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003c4  00000000  00000000  00002136  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000024fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e5       	ldi	r30, 0x58	; 88
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e0       	ldi	r26, 0x08	; 8
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1b d0       	rcall	.+54     	; 0xfa <main>
  c4:	47 c1       	rjmp	.+654    	; 0x354 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <createDynamicArrayWithChars>:
        }        
    }
    tab[iterator] = insertedValue;
}

void createDynamicArrayWithChars(char * tab, int length){
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	eb 01       	movw	r28, r22

    // zadanie z dynamicznym tworzeniem tablicy
    tab = (char *) malloc(length * sizeof(char)); //przydzielenie
  ce:	cb 01       	movw	r24, r22
  d0:	20 d0       	rcall	.+64     	; 0x112 <malloc>
  d2:	ac 01       	movw	r20, r24
    
    for (int i = 0; i <= length; i++)
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	08 c0       	rjmp	.+16     	; 0xea <createDynamicArrayWithChars+0x22>
        tab[i] = 40 + i; //lub 40 + i
  da:	fa 01       	movw	r30, r20
  dc:	e2 0f       	add	r30, r18
  de:	f3 1f       	adc	r31, r19
  e0:	98 e2       	ldi	r25, 0x28	; 40
  e2:	92 0f       	add	r25, r18
  e4:	90 83       	st	Z, r25
void createDynamicArrayWithChars(char * tab, int length){

    // zadanie z dynamicznym tworzeniem tablicy
    tab = (char *) malloc(length * sizeof(char)); //przydzielenie
    
    for (int i = 0; i <= length; i++)
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	c2 17       	cp	r28, r18
  ec:	d3 07       	cpc	r29, r19
  ee:	ac f7       	brge	.-22     	; 0xda <createDynamicArrayWithChars+0x12>
        tab[i] = 40 + i; //lub 40 + i
    
    free(tab); //zwolnienie pamiêci    };
  f0:	ca 01       	movw	r24, r20
  f2:	a7 d0       	rcall	.+334    	; 0x242 <free>
}    
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <main>:
    //convertDecTo16(convertedValue, base, tab, length);
    //result = sumRecursive(tab2, amountOfElements);
    
    //insertInAscendingManner(tab3, length3, insertedValue);
    
    createDynamicArrayWithChars(tab4, length4);
  fa:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <length4>
  fe:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <length4+0x1>
 102:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 106:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 10a:	de df       	rcall	.-68     	; 0xc8 <createDynamicArrayWithChars>

    return 0;
}
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	08 95       	ret

00000112 <malloc>:
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	91 05       	cpc	r25, r1
 11e:	10 f4       	brcc	.+4      	; 0x124 <malloc+0x12>
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__flp>
 128:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__flp+0x1>
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	a0 e0       	ldi	r26, 0x00	; 0
 132:	b0 e0       	ldi	r27, 0x00	; 0
 134:	30 97       	sbiw	r30, 0x00	; 0
 136:	19 f1       	breq	.+70     	; 0x17e <malloc+0x6c>
 138:	40 81       	ld	r20, Z
 13a:	51 81       	ldd	r21, Z+1	; 0x01
 13c:	02 81       	ldd	r16, Z+2	; 0x02
 13e:	13 81       	ldd	r17, Z+3	; 0x03
 140:	48 17       	cp	r20, r24
 142:	59 07       	cpc	r21, r25
 144:	c8 f0       	brcs	.+50     	; 0x178 <malloc+0x66>
 146:	84 17       	cp	r24, r20
 148:	95 07       	cpc	r25, r21
 14a:	69 f4       	brne	.+26     	; 0x166 <malloc+0x54>
 14c:	10 97       	sbiw	r26, 0x00	; 0
 14e:	31 f0       	breq	.+12     	; 0x15c <malloc+0x4a>
 150:	12 96       	adiw	r26, 0x02	; 2
 152:	0c 93       	st	X, r16
 154:	12 97       	sbiw	r26, 0x02	; 2
 156:	13 96       	adiw	r26, 0x03	; 3
 158:	1c 93       	st	X, r17
 15a:	27 c0       	rjmp	.+78     	; 0x1aa <malloc+0x98>
 15c:	00 93 14 01 	sts	0x0114, r16	; 0x800114 <__flp>
 160:	10 93 15 01 	sts	0x0115, r17	; 0x800115 <__flp+0x1>
 164:	22 c0       	rjmp	.+68     	; 0x1aa <malloc+0x98>
 166:	21 15       	cp	r18, r1
 168:	31 05       	cpc	r19, r1
 16a:	19 f0       	breq	.+6      	; 0x172 <malloc+0x60>
 16c:	42 17       	cp	r20, r18
 16e:	53 07       	cpc	r21, r19
 170:	18 f4       	brcc	.+6      	; 0x178 <malloc+0x66>
 172:	9a 01       	movw	r18, r20
 174:	bd 01       	movw	r22, r26
 176:	ef 01       	movw	r28, r30
 178:	df 01       	movw	r26, r30
 17a:	f8 01       	movw	r30, r16
 17c:	db cf       	rjmp	.-74     	; 0x134 <malloc+0x22>
 17e:	21 15       	cp	r18, r1
 180:	31 05       	cpc	r19, r1
 182:	f9 f0       	breq	.+62     	; 0x1c2 <malloc+0xb0>
 184:	28 1b       	sub	r18, r24
 186:	39 0b       	sbc	r19, r25
 188:	24 30       	cpi	r18, 0x04	; 4
 18a:	31 05       	cpc	r19, r1
 18c:	80 f4       	brcc	.+32     	; 0x1ae <malloc+0x9c>
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	9b 81       	ldd	r25, Y+3	; 0x03
 192:	61 15       	cp	r22, r1
 194:	71 05       	cpc	r23, r1
 196:	21 f0       	breq	.+8      	; 0x1a0 <malloc+0x8e>
 198:	fb 01       	movw	r30, r22
 19a:	93 83       	std	Z+3, r25	; 0x03
 19c:	82 83       	std	Z+2, r24	; 0x02
 19e:	04 c0       	rjmp	.+8      	; 0x1a8 <malloc+0x96>
 1a0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__flp+0x1>
 1a4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__flp>
 1a8:	fe 01       	movw	r30, r28
 1aa:	32 96       	adiw	r30, 0x02	; 2
 1ac:	44 c0       	rjmp	.+136    	; 0x236 <malloc+0x124>
 1ae:	fe 01       	movw	r30, r28
 1b0:	e2 0f       	add	r30, r18
 1b2:	f3 1f       	adc	r31, r19
 1b4:	81 93       	st	Z+, r24
 1b6:	91 93       	st	Z+, r25
 1b8:	22 50       	subi	r18, 0x02	; 2
 1ba:	31 09       	sbc	r19, r1
 1bc:	39 83       	std	Y+1, r19	; 0x01
 1be:	28 83       	st	Y, r18
 1c0:	3a c0       	rjmp	.+116    	; 0x236 <malloc+0x124>
 1c2:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 1c6:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 1ca:	23 2b       	or	r18, r19
 1cc:	41 f4       	brne	.+16     	; 0x1de <malloc+0xcc>
 1ce:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 1d2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 1d6:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <__brkval+0x1>
 1da:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <__brkval>
 1de:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1e2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1e6:	21 15       	cp	r18, r1
 1e8:	31 05       	cpc	r19, r1
 1ea:	41 f4       	brne	.+16     	; 0x1fc <malloc+0xea>
 1ec:	2d b7       	in	r18, 0x3d	; 61
 1ee:	3e b7       	in	r19, 0x3e	; 62
 1f0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 1f4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 1f8:	24 1b       	sub	r18, r20
 1fa:	35 0b       	sbc	r19, r21
 1fc:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__brkval>
 200:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__brkval+0x1>
 204:	e2 17       	cp	r30, r18
 206:	f3 07       	cpc	r31, r19
 208:	a0 f4       	brcc	.+40     	; 0x232 <malloc+0x120>
 20a:	2e 1b       	sub	r18, r30
 20c:	3f 0b       	sbc	r19, r31
 20e:	28 17       	cp	r18, r24
 210:	39 07       	cpc	r19, r25
 212:	78 f0       	brcs	.+30     	; 0x232 <malloc+0x120>
 214:	ac 01       	movw	r20, r24
 216:	4e 5f       	subi	r20, 0xFE	; 254
 218:	5f 4f       	sbci	r21, 0xFF	; 255
 21a:	24 17       	cp	r18, r20
 21c:	35 07       	cpc	r19, r21
 21e:	48 f0       	brcs	.+18     	; 0x232 <malloc+0x120>
 220:	4e 0f       	add	r20, r30
 222:	5f 1f       	adc	r21, r31
 224:	50 93 13 01 	sts	0x0113, r21	; 0x800113 <__brkval+0x1>
 228:	40 93 12 01 	sts	0x0112, r20	; 0x800112 <__brkval>
 22c:	81 93       	st	Z+, r24
 22e:	91 93       	st	Z+, r25
 230:	02 c0       	rjmp	.+4      	; 0x236 <malloc+0x124>
 232:	e0 e0       	ldi	r30, 0x00	; 0
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	cf 01       	movw	r24, r30
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	1f 91       	pop	r17
 23e:	0f 91       	pop	r16
 240:	08 95       	ret

00000242 <free>:
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	00 97       	sbiw	r24, 0x00	; 0
 248:	09 f4       	brne	.+2      	; 0x24c <free+0xa>
 24a:	81 c0       	rjmp	.+258    	; 0x34e <free+0x10c>
 24c:	fc 01       	movw	r30, r24
 24e:	32 97       	sbiw	r30, 0x02	; 2
 250:	13 82       	std	Z+3, r1	; 0x03
 252:	12 82       	std	Z+2, r1	; 0x02
 254:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <__flp>
 258:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <__flp+0x1>
 25c:	10 97       	sbiw	r26, 0x00	; 0
 25e:	81 f4       	brne	.+32     	; 0x280 <free+0x3e>
 260:	20 81       	ld	r18, Z
 262:	31 81       	ldd	r19, Z+1	; 0x01
 264:	82 0f       	add	r24, r18
 266:	93 1f       	adc	r25, r19
 268:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 26c:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 270:	28 17       	cp	r18, r24
 272:	39 07       	cpc	r19, r25
 274:	51 f5       	brne	.+84     	; 0x2ca <free+0x88>
 276:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__brkval+0x1>
 27a:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__brkval>
 27e:	67 c0       	rjmp	.+206    	; 0x34e <free+0x10c>
 280:	ed 01       	movw	r28, r26
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	ce 17       	cp	r28, r30
 288:	df 07       	cpc	r29, r31
 28a:	40 f4       	brcc	.+16     	; 0x29c <free+0x5a>
 28c:	4a 81       	ldd	r20, Y+2	; 0x02
 28e:	5b 81       	ldd	r21, Y+3	; 0x03
 290:	9e 01       	movw	r18, r28
 292:	41 15       	cp	r20, r1
 294:	51 05       	cpc	r21, r1
 296:	f1 f0       	breq	.+60     	; 0x2d4 <free+0x92>
 298:	ea 01       	movw	r28, r20
 29a:	f5 cf       	rjmp	.-22     	; 0x286 <free+0x44>
 29c:	d3 83       	std	Z+3, r29	; 0x03
 29e:	c2 83       	std	Z+2, r28	; 0x02
 2a0:	40 81       	ld	r20, Z
 2a2:	51 81       	ldd	r21, Z+1	; 0x01
 2a4:	84 0f       	add	r24, r20
 2a6:	95 1f       	adc	r25, r21
 2a8:	c8 17       	cp	r28, r24
 2aa:	d9 07       	cpc	r29, r25
 2ac:	59 f4       	brne	.+22     	; 0x2c4 <free+0x82>
 2ae:	88 81       	ld	r24, Y
 2b0:	99 81       	ldd	r25, Y+1	; 0x01
 2b2:	84 0f       	add	r24, r20
 2b4:	95 1f       	adc	r25, r21
 2b6:	02 96       	adiw	r24, 0x02	; 2
 2b8:	91 83       	std	Z+1, r25	; 0x01
 2ba:	80 83       	st	Z, r24
 2bc:	8a 81       	ldd	r24, Y+2	; 0x02
 2be:	9b 81       	ldd	r25, Y+3	; 0x03
 2c0:	93 83       	std	Z+3, r25	; 0x03
 2c2:	82 83       	std	Z+2, r24	; 0x02
 2c4:	21 15       	cp	r18, r1
 2c6:	31 05       	cpc	r19, r1
 2c8:	29 f4       	brne	.+10     	; 0x2d4 <free+0x92>
 2ca:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__flp+0x1>
 2ce:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__flp>
 2d2:	3d c0       	rjmp	.+122    	; 0x34e <free+0x10c>
 2d4:	e9 01       	movw	r28, r18
 2d6:	fb 83       	std	Y+3, r31	; 0x03
 2d8:	ea 83       	std	Y+2, r30	; 0x02
 2da:	49 91       	ld	r20, Y+
 2dc:	59 91       	ld	r21, Y+
 2de:	c4 0f       	add	r28, r20
 2e0:	d5 1f       	adc	r29, r21
 2e2:	ec 17       	cp	r30, r28
 2e4:	fd 07       	cpc	r31, r29
 2e6:	61 f4       	brne	.+24     	; 0x300 <free+0xbe>
 2e8:	80 81       	ld	r24, Z
 2ea:	91 81       	ldd	r25, Z+1	; 0x01
 2ec:	84 0f       	add	r24, r20
 2ee:	95 1f       	adc	r25, r21
 2f0:	02 96       	adiw	r24, 0x02	; 2
 2f2:	e9 01       	movw	r28, r18
 2f4:	99 83       	std	Y+1, r25	; 0x01
 2f6:	88 83       	st	Y, r24
 2f8:	82 81       	ldd	r24, Z+2	; 0x02
 2fa:	93 81       	ldd	r25, Z+3	; 0x03
 2fc:	9b 83       	std	Y+3, r25	; 0x03
 2fe:	8a 83       	std	Y+2, r24	; 0x02
 300:	e0 e0       	ldi	r30, 0x00	; 0
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	12 96       	adiw	r26, 0x02	; 2
 306:	8d 91       	ld	r24, X+
 308:	9c 91       	ld	r25, X
 30a:	13 97       	sbiw	r26, 0x03	; 3
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	19 f0       	breq	.+6      	; 0x316 <free+0xd4>
 310:	fd 01       	movw	r30, r26
 312:	dc 01       	movw	r26, r24
 314:	f7 cf       	rjmp	.-18     	; 0x304 <free+0xc2>
 316:	8d 91       	ld	r24, X+
 318:	9c 91       	ld	r25, X
 31a:	11 97       	sbiw	r26, 0x01	; 1
 31c:	9d 01       	movw	r18, r26
 31e:	2e 5f       	subi	r18, 0xFE	; 254
 320:	3f 4f       	sbci	r19, 0xFF	; 255
 322:	82 0f       	add	r24, r18
 324:	93 1f       	adc	r25, r19
 326:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <__brkval>
 32a:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <__brkval+0x1>
 32e:	28 17       	cp	r18, r24
 330:	39 07       	cpc	r19, r25
 332:	69 f4       	brne	.+26     	; 0x34e <free+0x10c>
 334:	30 97       	sbiw	r30, 0x00	; 0
 336:	29 f4       	brne	.+10     	; 0x342 <free+0x100>
 338:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__flp+0x1>
 33c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__flp>
 340:	02 c0       	rjmp	.+4      	; 0x346 <free+0x104>
 342:	13 82       	std	Z+3, r1	; 0x03
 344:	12 82       	std	Z+2, r1	; 0x02
 346:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <__brkval+0x1>
 34a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <__brkval>
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	08 95       	ret

00000354 <_exit>:
 354:	f8 94       	cli

00000356 <__stop_program>:
 356:	ff cf       	rjmp	.-2      	; 0x356 <__stop_program>
